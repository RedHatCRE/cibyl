"""
#    Copyright 2022 Red Hat
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
"""
from unittest import TestCase
from unittest.mock import Mock

from cibyl.sources.zuul.apis.factories.rest import ZuulRESTClientFactory
from cibyl.sources.zuul.apis.rest import ZuulRESTClient


class TestZuulRESTClientFactory(TestCase):
    """Tests for :class:`ZuulRESTClientFactory`.
    """

    def test_kwargs(self):
        """Checks that an instance can be created through keyword arguments.
        """
        url = Mock()
        cert = Mock()

        factory = ZuulRESTClientFactory.from_kwargs(
            url=url,
            cert=cert
        )

        self.assertEqual(url, factory.host)
        self.assertEqual(cert, factory.cert)

    def test_default_value_for_cert(self):
        """Checks that if 'cert' is not given to 'from_kwargs', then it is
        set to 'None'.
        """
        url = Mock()

        factory = ZuulRESTClientFactory.from_kwargs(
            url=url
        )

        self.assertIsNone(factory.cert)

    def test_error_if_no_url(self):
        """Checks that 'from_kwargs' raises an error if the 'url' key is
        not provided.
        """
        with self.assertRaises(ValueError):
            ZuulRESTClientFactory.from_kwargs()

    def test_creates_rest_api(self):
        """Checks that the correct type of API is generated by this factory.
        """
        url = Mock()

        factory = ZuulRESTClientFactory(
            host=url,
            cert=None
        )

        self.assertIsInstance(factory.new(), ZuulRESTClient)

    def test_arguments_passed_to_api(self):
        """Checks that the created API has the arguments passed to the
        factory.
        """
        url = Mock()
        cert = Mock()

        factory = ZuulRESTClientFactory(
            host=url,
            cert=cert
        )

        result = factory.new()

        self.assertEqual(result.session.host, url)
        self.assertEqual(result.session.session.verify, cert)
